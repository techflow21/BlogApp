services:
  blogapp.api:
    build:
      context: .
      dockerfile: BlogApp.API/Dockerfile
    depends_on:
      - mongo
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:80"   # HTTP → API inside container listens on 80
      - "5001:443"  # HTTPS → API inside container listens on 443

  mongo:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7.2
    container_name: redisdb
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.5
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  jaeger:
    image: jaegertracing/all-in-one:1.47
    ports:
      - "16686:16686"   # Jaeger UI
      - "6831:6831/udp" # Jaeger agent (OTLP/UDP)

  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
volumes:
  mongo_data:
  redis_data:
